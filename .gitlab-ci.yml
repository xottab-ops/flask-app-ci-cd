variables:
  VERSION: 1.0.${CI_PIPELINE_ID}
  DOCKER_TLS_CERTDIR: "" 
  CRANE_VERSION: 0.19.2

stages:
  - build
  - release
  - publish

build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
    - echo "test"
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/application"
      --dockerfile "${CI_PROJECT_DIR}/application/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/application:$CI_COMMIT_SHA"
      --build-arg VERSION=$VERSION
      --cache=true
  # rules:
  #   - changes:
  #     - application/* 

release:
  variables:
    GIT_STRATEGY: none
  image:
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [ "" ]
  cache: [ ]
  stage: release
  before_script:
    - crane auth login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - crane tag $CI_REGISTRY_IMAGE/application:$CI_COMMIT_SHA $VERSION
  # rules:
  #   - changes:
  #     - application/*
  needs:
    - job: build

publish:
  stage: publish
  image: golang:alpine

  before_script:
    - apk add --no-cache curl
    - curl -sSL https://github.com/google/go-containerregistry/releases/download/$CRANE_VERSION/crane_linux_amd64.tar.gz | tar xz -C /usr/local/bin
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest
    - echo "$DOCKERHUB_PASSWORD" | crane auth login hub.docker.com -u "$DOCKERHUB_USERNAME" --password-stdin
    - crane tag $CI_REGISTRY_IMAGE:latest $DOCKERHUB_USERNAME/$DOCKERHUB_REPO:latest
    - crane push $CI_REGISTRY_IMAGE:latest $DOCKERHUB_USERNAME/$DOCKERHUB_REPO:latest
    
  
  needs:
    - job: release
