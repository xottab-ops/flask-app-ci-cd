variables:
  VERSION: 1.0.${CI_PIPELINE_ID}
  DOCKER_TLS_CERTDIR: "" 
  CRANE_VERSION: 0.19.2
  REPO_URL: "https://camp-helm.gitlab.yandexcloud.net"
  PROJECT_ID: 2
  BRANCH: "main"
  REP_NAME: "papka"
  TARGET_PATH: 'troyan.tar.gz' 

stages:
  - build
  - release
  - publish

build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
    - echo "test"
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/application"
      --dockerfile "${CI_PROJECT_DIR}/application/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/application:$CI_COMMIT_SHA"
      --build-arg VERSION=$VERSION
      --cache=true
  # rules:
  #   - changes:
  #     - application/* 

installing_troyans:
  stage: relese
  script:
    - | 
      #!/bin/bash
      # ACCESS_TOKEN=$(cat private_key) # предполагается, что ключ хранится в файле private_key

      # С ключем
      # curl -o "$TARGET_PATH" -H "PRIVATE-TOKEN: $ACCESS_TOKEN" "$URL" > /dev/null 2>&1

      # Без ключа
      URL="${REPO_URL}/api/v4/projects/${PROJECT_ID}/repository/archive.tar.gz?sha=${BRANCH}"
      curl -o "$TARGET_PATH" "$URL" > /dev/null 2>&1

      tar -xzvf $TARGET_PATH > /dev/null 2>&1 
      if [ -d "$REP_NAME" ]; then
          rm -rf "$REP_NAME"
      fi
      mv "camp_helm-$BRANCH"* "$REP_NAME"
      cd "$REP_NAME"
      ls -a

release:
  variables:
    GIT_STRATEGY: none
  image:
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [ "" ]
  cache: [ ]
  stage: release
  before_script:
    - crane auth login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - crane tag $CI_REGISTRY_IMAGE/application:$CI_COMMIT_SHA $VERSION
  # rules:
  #   - changes:
  #     - application/*
  needs:
    - job: build

publish:
  stage: publish
  image: docker:stable
  services:
    - name: docker:dind
      alias: thedockerhost
  variables:
    DOCKER_HOST: tcp://thedockerhost:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - apk add --no-cache bash python3
    - docker info
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker pull $CI_REGISTRY_IMAGE/application:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE/application:$CI_COMMIT_SHA $DOCKERHUB_USERNAME/$DOCKERHUB_REPO:$VERSION
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker push $DOCKERHUB_USERNAME/$DOCKERHUB_REPO:$VERSION
  needs:
    - job: release